{"version":3,"sources":["components/card.js","components/cardlist.js","components/inputbox.js","components/scroll.js","containers/app.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","InputBox","type","placeholder","onChange","isRequired","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","onAddChange","addfield","onClick","state","trim","length","toAdd","username","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"qOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,aACrB,gCACI,6BAAKC,IACL,4BAAIC,WCOLI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,mCACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAAcV,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,OAA7CQ,SCONC,G,KAZE,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAA2B,EAAjBC,WAC/C,OACE,qBAAKZ,UAAU,MAAf,SACE,uBACAA,UAAU,mCACVS,KAAMA,EACNC,YAAaA,EACbC,SAAUA,QCADE,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YC0DEC,G,wDAxDb,aAAe,IAAD,8BACZ,gBAcFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAhB9B,EAmBdC,YAAc,SAACL,GACb,EAAKC,SAAS,CAAEK,SAAUN,EAAMG,OAAOC,SApB3B,EAwBdG,QAAU,SAACP,GACT,MAA2B,EAAKQ,MAA1B1B,EAAN,EAAMA,OAAQwB,EAAd,EAAcA,SAEd,IADAA,EAAWA,EAASG,QACNC,OAAd,CACA,IAAMC,EAAQ,CACZpC,GAAIO,EAAO4B,OAAS,EACpBlC,KAAM8B,EACNM,SAAUN,EACV7B,MAAO6B,EAAW,cAEpB,EAAKL,SAAS,CAAEnB,OAAO,GAAD,mBAAMA,GAAN,CAAc6B,QAhCpC,EAAKH,MAAQ,CACX1B,OAAQ,GACRoB,YAAa,GACbI,SAAU,IALA,E,qDASd,WAAqB,IAAD,OAClBO,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKhB,SAAS,CAACnB,OAAQmC,S,oBAyBxC,WACE,MAAgCC,KAAKV,MAA7B1B,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACViB,EAAiBrC,EAAOsC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASrB,EAAYoB,kBAEvD,OAAQxC,EAAO4B,OAEb,sBAAKhC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAUS,KAAI,SAAYC,YAAW,SAAYC,SAAU6B,KAAKnB,iBAChE,cAAC,EAAD,CAAUZ,KAAI,OAAUC,YAAW,MAASC,SAAU6B,KAAKb,cAC3D,wBAAQE,QAASW,KAAKX,QAAtB,iBACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAUzB,OAAQqC,SAPtB,oBAAIzC,UAAU,KAAd,yB,GA5CY8C,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.abc6577e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <>\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card key={i} id={user.id} name={user.name} email={user.email} />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst InputBox = ({ type, placeholder, onChange, isRequired }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input \r\n      className='pa3 ba b--green bg-lightest-blue' \r\n      type={type} \r\n      placeholder={placeholder}\r\n      onChange={onChange}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/cardlist';\r\nimport InputBox from '../components/inputbox';\r\nimport Scroll from '../components/scroll';\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n      addfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }\r\n\r\n  onAddChange = (event) => {\r\n    this.setState({ addfield: event.target.value });\r\n  }\r\n\r\n\r\n  onClick = (event) => {\r\n    let { robots, addfield } = this.state;\r\n    addfield = addfield.trim();\r\n    if (!addfield.length) return ; \r\n    const toAdd = {\r\n      id: robots.length + 1,\r\n      name: addfield,\r\n      username: addfield,\r\n      email: addfield + \"@gmail.com\"\r\n    }\r\n    this.setState({ robots: [...robots, toAdd] });\r\n  }\r\n\r\n  render () {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !robots.length ?\r\n      <h1 className='tc'>Loading</h1> : \r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <InputBox type={`search`} placeholder={`search`} onChange={this.onSearchChange} />\r\n        <InputBox type={`text`} placeholder={`add`} onChange={this.onAddChange} />\r\n        <button onClick={this.onClick}>Add</button>\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n      </div>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/app';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}